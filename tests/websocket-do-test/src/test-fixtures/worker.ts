/**
 * Test Worker for routing requests to Durable Objects
 *
 * This worker demonstrates:
 * 1. Using Hono with Cloudflare Workers and DO bindings
 * 2. Routing pattern for multi-tenant applications (room-based)
 * 3. Forwarding requests to Durable Objects via stubs
 *
 * Reference: https://developers.cloudflare.com/durable-objects/best-practices/access-durable-objects-from-a-worker/
 */

import { Hono } from "hono";

// Main worker that routes to the Durable Object
// Env type is auto-generated by `wrangler types` from wrangler.jsonc
const app = new Hono<{ Bindings: Env }>();

app.get("/room/:roomId/*", async (c) => {
	const roomId = c.req.param("roomId");

	// getByName() creates a deterministic stub from a string (new API as of 2025)
	// Same roomId always maps to the same DO instance
	// This ensures all clients for a room connect to the same DO
	// Reference: https://developers.cloudflare.com/durable-objects/best-practices/access-durable-objects-from-a-worker/#generating-ids-by-name
	const stub = c.env.CHAT_ROOM.getByName(roomId);

	// Forward the request to the DO, removing the /room/:roomId prefix
	// This allows the DO to handle clean paths like /websocket instead of /room/abc/websocket
	const url = new URL(c.req.url);
	const path = url.pathname.replace(`/room/${roomId}`, "");
	url.pathname = path || "/";

	return stub.fetch(new Request(url.toString(), c.req.raw));
});

app.post("/room/:roomId/*", async (c) => {
	const roomId = c.req.param("roomId");
	const stub = c.env.CHAT_ROOM.getByName(roomId);

	const url = new URL(c.req.url);
	const path = url.pathname.replace(`/room/${roomId}`, "");
	url.pathname = path || "/";

	return stub.fetch(new Request(url.toString(), c.req.raw));
});

app.get("/", (c) => {
	return c.text("WebSocket DO Test Worker");
});

export default app;

// IMPORTANT: Must export DO class for wrangler to bind it
// The class_name in wrangler.jsonc refers to this exported name
// Reference: https://developers.cloudflare.com/durable-objects/get-started/#durable-object-class
export { ChatRoomDO } from "./ChatRoomDO";
